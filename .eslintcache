[{"/Users/shirleycheung/Desktop/Programming Projects/ggt-donation-web/src/index.js":"1","/Users/shirleycheung/Desktop/Programming Projects/ggt-donation-web/src/App.js":"2","/Users/shirleycheung/Desktop/Programming Projects/ggt-donation-web/src/components/DonationForm.js":"3","/Users/shirleycheung/Desktop/Programming Projects/ggt-donation-web/src/components/FrontPage.js":"4","/Users/shirleycheung/Desktop/Programming Projects/ggt-donation-web/src/components/Header.js":"5","/Users/shirleycheung/Desktop/Programming Projects/ggt-donation-web/src/components/AboutUs.js":"6","/Users/shirleycheung/Desktop/Programming Projects/ggt-donation-web/src/components/Footer.js":"7","/Users/shirleycheung/Desktop/Programming Projects/ggt-donation-web/src/components/Pics.js":"8"},{"size":219,"mtime":1610062777001,"results":"9","hashOfConfig":"10"},{"size":742,"mtime":1610062788183,"results":"11","hashOfConfig":"10"},{"size":5564,"mtime":1610065354038,"results":"12","hashOfConfig":"10"},{"size":667,"mtime":1608515395550,"results":"13","hashOfConfig":"10"},{"size":677,"mtime":1608569111296,"results":"14","hashOfConfig":"10"},{"size":3491,"mtime":1609965311480,"results":"15","hashOfConfig":"10"},{"size":283,"mtime":1608516249227,"results":"16","hashOfConfig":"10"},{"size":1430,"mtime":1609806881878,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"vbrkd3",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/shirleycheung/Desktop/Programming Projects/ggt-donation-web/src/index.js",[],["39","40"],"/Users/shirleycheung/Desktop/Programming Projects/ggt-donation-web/src/App.js",["41"],"import \"./App.css\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Pics from \"./components/Pics\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport FrontPage from \"./components/FrontPage\";\nimport DonationForm from \"./components/DonationForm\";\nimport AboutUs from \"./components/AboutUs\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={AboutUs} />\n          <Route exact path=\"/pics\" component={Pics} />\n          <Route exact path=\"/donation\" component={FrontPage} />\n        </Switch>\n\n        <Footer />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/Users/shirleycheung/Desktop/Programming Projects/ggt-donation-web/src/components/DonationForm.js",["42"],"import React, { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\n\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport axios from \"axios\";\n\nfunction DonationForm() {\n  const [name, setName] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  //use hooks provided by stripe\n  const stripe = useStripe();\n  const elements = useElements();\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    setIsProcessing(true);\n    console.log(\"elements:\", elements);\n    try {\n      console.log(\"before axios.post\");\n      const paymentIntent = await axios.post(\n        \"https://ggt-donation.heroku.com/donate\",\n        {\n          amount: amount * 100,\n          email: email,\n        }\n      );\n      //paymentIntent.data is client secret\n      console.log(\"paymentIntent:\", paymentIntent);\n\n      if (!stripe || !elements) {\n        // Stripe.js has not loaded yet. Make sure to disable\n        // form submission until Stripe.js has loaded.\n        return;\n      }\n\n      // Get a reference to a mounted CardElement. Elements knows how\n      // to find your CardElement because there can only ever be one of\n      // each type of element.\n      const cardElement = elements.getElement(CardElement);\n\n      // Use your card Element with other Stripe.js APIs\n      const { error, paymentMethod } = await stripe.createPaymentMethod({\n        type: \"card\",\n        card: cardElement,\n        billing_details: {\n          name: name,\n          phone: phone,\n          email: email,\n        },\n      });\n\n      if (error) {\n        console.log(\"[error]\", error);\n        setIsProcessing(false);\n        window.alert(\"Error: Please enter credit card detail\");\n      } else {\n        console.log(\"[PaymentMethod]\", paymentMethod);\n        setIsProcessing(false);\n        setName(\"\");\n        setPhone(\"\");\n        setEmail(\"\");\n        setAmount(\"\");\n        cardElement.clear();\n        console.log(\"successfull donate\");\n      }\n\n      //confirm payment method,then we can go check dash board\n      const confirmPayment = await stripe.confirmCardPayment(\n        paymentIntent.data,\n        {\n          payment_method: paymentMethod.id,\n        }\n      );\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  return (\n    <div style={{ margin: \"auto\", width: \"60%\" }}>\n      <Form onSubmit={handleSubmit} action=\"POST\">\n        <Form.Group style={{ textAlign: \"start\" }}>\n          <Form.Label>Your Name</Form.Label>\n          <Form.Control\n            onChange={(e) => setName(e.target.value)}\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Name\"\n            value={name}\n          />\n        </Form.Group>\n        <Form.Group style={{ textAlign: \"start\" }}>\n          <Form.Label>Your Phone number</Form.Label>\n          <Form.Control\n            onChange={(e) => setPhone(e.target.value)}\n            name=\"phone\"\n            type=\"tel\"\n            placeholder=\"Phone Number\"\n            value={phone}\n          />\n          <small>Format: 1234567890</small>\n        </Form.Group>\n\n        <Form.Group style={{ textAlign: \"start\" }}>\n          <Form.Label>Your Email</Form.Label>\n          <Form.Control\n            onChange={(e) => setEmail(e.target.value)}\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"Email\"\n            value={email}\n          />\n        </Form.Group>\n\n        <Form.Group style={{ textAlign: \"start\" }}>\n          <Form.Label>Donation Amount (USD)</Form.Label>\n          <Form.Control\n            onChange={(e) => setAmount(e.target.value)}\n            name=\"amount\"\n            type=\"number\"\n            placeholder=\"$ USD\"\n            value={amount}\n          />\n        </Form.Group>\n\n        <Form.Group style={{ textAlign: \"start\" }}>\n          <Form.Label>Your credit card detail</Form.Label>\n          <fieldset className=\"FormGroup\">\n            <div\n              className=\"FormRow\"\n              style={{\n                backgroundColor: \"white\",\n                borderRadius: \"5px\",\n                height: \"33px\",\n                borderColor: \"grey\",\n                alignItems: \"center\",\n                padding: \"5px 20px 5px 20px\",\n              }}\n            >\n              <CardElement\n                options={{\n                  iconStyle: \"solid\",\n                  style: {\n                    base: {\n                      iconColor: \"#c4f0ff\",\n                      color: \"black\",\n                      fontWeight: 500,\n                      fontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\n                      fontSize: \"16px\",\n                      fontSmoothing: \"antialiased\",\n                      \":-webkit-autofill\": { color: \"#fce883\" },\n                      \"::placeholder\": { color: \"#87bbfd\" },\n                    },\n                    invalid: {\n                      iconColor: \"#ffc7ee\",\n                      color: \"#ffc7ee\",\n                    },\n                  },\n                }}\n              />\n            </div>\n          </fieldset>\n        </Form.Group>\n\n        <br />\n        <Button\n          variant=\"warning\"\n          type=\"submit\"\n          disabled={\n            !name || !email || !amount || !CardElement || isProcessing === true\n          }\n        >\n          {isProcessing === true ? \"Processing...\" : \"Donate\"}\n        </Button>\n      </Form>\n    </div>\n  );\n}\n\nexport default DonationForm;\n","/Users/shirleycheung/Desktop/Programming Projects/ggt-donation-web/src/components/FrontPage.js",["43"],"import DonationForm from \"./DonationForm\";\nimport { Container } from \"react-bootstrap\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst stripePromise = loadStripe(\"pk_test_mmacZin7tVuUu56i31qV6g7q00vRNM02Cb\");\n//show different methods that we can use for stripePromise\n\nfunction FrontPage() {\n  return (\n    <div>\n      <h1>Welcome to Guan Gong Temple USA</h1>\n      <br />\n      <Container>\n        <Elements stripe={stripePromise}>\n          <DonationForm />\n        </Elements>\n      </Container>\n      <br />\n    </div>\n  );\n}\n\nexport default FrontPage;\n","/Users/shirleycheung/Desktop/Programming Projects/ggt-donation-web/src/components/Header.js",[],"/Users/shirleycheung/Desktop/Programming Projects/ggt-donation-web/src/components/AboutUs.js",[],["44","45"],"/Users/shirleycheung/Desktop/Programming Projects/ggt-donation-web/src/components/Footer.js",[],"/Users/shirleycheung/Desktop/Programming Projects/ggt-donation-web/src/components/Pics.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":7,"column":8,"nodeType":"52","messageId":"53","endLine":7,"endColumn":20},{"ruleId":"50","severity":1,"message":"54","line":72,"column":13,"nodeType":"52","messageId":"53","endLine":72,"endColumn":27},{"ruleId":"50","severity":1,"message":"55","line":5,"column":10,"nodeType":"52","messageId":"53","endLine":5,"endColumn":23},{"ruleId":"46","replacedBy":"56"},{"ruleId":"48","replacedBy":"57"},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'DonationForm' is defined but never used.","Identifier","unusedVar","'confirmPayment' is assigned a value but never used.","'BrowserRouter' is defined but never used.",["58"],["59"],"no-global-assign","no-unsafe-negation"]