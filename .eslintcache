[{"/Users/shirleycheung/Desktop/Programming Projects/ggt-donation-web/src/index.js":"1","/Users/shirleycheung/Desktop/Programming Projects/ggt-donation-web/src/App.js":"2","/Users/shirleycheung/Desktop/Programming Projects/ggt-donation-web/src/components/DonationForm.js":"3","/Users/shirleycheung/Desktop/Programming Projects/ggt-donation-web/src/components/FrontPage.js":"4","/Users/shirleycheung/Desktop/Programming Projects/ggt-donation-web/src/components/Header.js":"5","/Users/shirleycheung/Desktop/Programming Projects/ggt-donation-web/src/components/AboutUs.js":"6","/Users/shirleycheung/Desktop/Programming Projects/ggt-donation-web/src/components/Footer.js":"7","/Users/shirleycheung/Desktop/Programming Projects/ggt-donation-web/src/components/Pics.js":"8"},{"size":219,"mtime":1610062777001,"results":"9","hashOfConfig":"10"},{"size":688,"mtime":1612322718397,"results":"11","hashOfConfig":"10"},{"size":5755,"mtime":1612850834025,"results":"12","hashOfConfig":"10"},{"size":677,"mtime":1612850204141,"results":"13","hashOfConfig":"10"},{"size":691,"mtime":1612842626449,"results":"14","hashOfConfig":"10"},{"size":1954,"mtime":1612846446273,"results":"15","hashOfConfig":"10"},{"size":283,"mtime":1608516249227,"results":"16","hashOfConfig":"10"},{"size":2122,"mtime":1612849700699,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"iox7w0",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/shirleycheung/Desktop/Programming Projects/ggt-donation-web/src/index.js",[],["36","37"],"/Users/shirleycheung/Desktop/Programming Projects/ggt-donation-web/src/App.js",[],"/Users/shirleycheung/Desktop/Programming Projects/ggt-donation-web/src/components/DonationForm.js",["38"],"import React, { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport axios from \"axios\";\n\nfunction DonationForm() {\n  const [name, setName] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  //use hooks provided by stripe\n  const stripe = useStripe();\n  const elements = useElements();\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    setIsProcessing(true);\n    // console.log(\"elements:\", elements);\n    try {\n      // console.log(\"before axios.post\");\n      const paymentIntent = await axios.post(\n        \"/donate\",\n        // \"http://localhost:5000/donate\",\n        {\n          amount: amount * 100,\n          email: email,\n        }\n      );\n      //paymentIntent.data is client secret\n      //console.log(\"paymentIntent:\", paymentIntent);\n\n      if (!stripe || !elements) {\n        // Stripe.js has not loaded yet. Make sure to disable\n        // form submission until Stripe.js has loaded.\n        return;\n      }\n\n      // Get a reference to a mounted CardElement. Elements knows how\n      // to find your CardElement because there can only ever be one of\n      // each type of element.\n      const cardElement = elements.getElement(CardElement);\n\n      // Use your card Element with other Stripe.js APIs\n      const { error, paymentMethod } = await stripe.createPaymentMethod({\n        type: \"card\",\n        card: cardElement,\n        billing_details: {\n          name: name,\n          phone: phone,\n          email: email,\n        },\n      });\n\n      if (error) {\n        // console.log(\"[error]\", error);\n        setIsProcessing(false);\n        window.alert(\"Error:\" + error.message);\n      } else {\n        // console.log(\"[PaymentMethod]\", paymentMethod);\n        setIsProcessing(false);\n        setName(\"\");\n        setPhone(\"\");\n        setEmail(\"\");\n        setAmount(\"\");\n        cardElement.clear();\n        // console.log(\"successfull donate\");\n        alert(\"Successful!Thank you.\");\n      }\n\n      //confirm payment method,then we can go check dash board\n      const confirmPayment = await stripe.confirmCardPayment(\n        paymentIntent.data,\n        {\n          payment_method: paymentMethod.id,\n        }\n      );\n    } catch (err) {\n      setIsProcessing(false);\n      alert(\"Something went wrong, please try again!\");\n      // console.log(err);\n    }\n  }\n\n  return (\n    <div style={{ margin: \"auto\", width: \"85%\" }}>\n      <Form onSubmit={handleSubmit} action=\"POST\">\n        <Form.Group style={{ textAlign: \"start\" }}>\n          <Form.Label>Your Name 名字</Form.Label>\n          <Form.Control\n            onChange={(e) => setName(e.target.value)}\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Name\"\n            value={name}\n          />\n        </Form.Group>\n        <Form.Group style={{ textAlign: \"start\" }}>\n          <Form.Label>Your Phone number 電話</Form.Label>\n          <Form.Control\n            onChange={(e) => setPhone(e.target.value)}\n            name=\"phone\"\n            type=\"tel\"\n            placeholder=\"Phone Number\"\n            value={phone}\n          />\n          <small>Format: 1234567890</small>\n        </Form.Group>\n\n        <Form.Group style={{ textAlign: \"start\" }}>\n          <Form.Label>Your Email 電郵</Form.Label>\n          <Form.Control\n            onChange={(e) => setEmail(e.target.value)}\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"Email\"\n            value={email}\n          />\n        </Form.Group>\n\n        <Form.Group style={{ textAlign: \"start\" }}>\n          <Form.Label>Donation Amount 捐款數目 (USD)</Form.Label>\n          <Form.Control\n            onChange={(e) => setAmount(e.target.value)}\n            name=\"amount\"\n            type=\"number\"\n            placeholder=\"$ USD\"\n            value={amount}\n          />\n        </Form.Group>\n\n        <Form.Group style={{ textAlign: \"start\" }}>\n          <Form.Label>Your credit card detail 信用卡資料</Form.Label>\n          <fieldset className=\"FormGroup\">\n            <div\n              className=\"FormRow\"\n              style={{\n                backgroundColor: \"white\",\n                borderRadius: \"5px\",\n                height: \"33px\",\n                borderColor: \"grey\",\n                alignItems: \"center\",\n                padding: \"5px 20px 5px 20px\",\n              }}\n            >\n              <CardElement\n                options={{\n                  iconStyle: \"solid\",\n                  style: {\n                    base: {\n                      iconColor: \"#c4f0ff\",\n                      color: \"black\",\n                      fontWeight: 500,\n                      fontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\n                      fontSize: \"16px\",\n                      fontSmoothing: \"antialiased\",\n                      \":-webkit-autofill\": { color: \"#fce883\" },\n                      \"::placeholder\": { color: \"#87bbfd\" },\n                    },\n                    invalid: {\n                      iconColor: \"#ffc7ee\",\n                      color: \"#ffc7ee\",\n                    },\n                  },\n                }}\n              />\n            </div>\n          </fieldset>\n        </Form.Group>\n\n        <br />\n        <Button\n          variant=\"warning\"\n          type=\"submit\"\n          disabled={\n            !name || !email || !amount || !CardElement || isProcessing === true\n          }\n        >\n          {isProcessing === true ? \"Processing...\" : \"Donate\"}\n        </Button>\n      </Form>\n    </div>\n  );\n}\n\nexport default DonationForm;\n","/Users/shirleycheung/Desktop/Programming Projects/ggt-donation-web/src/components/FrontPage.js",[],"/Users/shirleycheung/Desktop/Programming Projects/ggt-donation-web/src/components/Header.js",[],"/Users/shirleycheung/Desktop/Programming Projects/ggt-donation-web/src/components/AboutUs.js",[],"/Users/shirleycheung/Desktop/Programming Projects/ggt-donation-web/src/components/Footer.js",[],"/Users/shirleycheung/Desktop/Programming Projects/ggt-donation-web/src/components/Pics.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":73,"column":13,"nodeType":"45","messageId":"46","endLine":73,"endColumn":27},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'confirmPayment' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]